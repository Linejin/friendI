# Docker environment configuration
spring.profiles.active=docker

# Server configuration
server.port=8080
server.address=0.0.0.0

# Application name
spring.application.name=FriendlyI Backend

# Actuator for health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.defaults.enabled=true

# CORS configuration for Docker
spring.web.cors.allowed-origins=http://localhost,http://localhost:80,http://frontend,http://friendlyi-frontend,http://friendlyi-frontend-lowmem,http://friendlyi-frontend-minimal
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Database configuration (H2 for Docker)
spring.datasource.url=jdbc:h2:file:/app/data/friendlyi;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}

# JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (production safe)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:false}
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=${H2_CONSOLE_WEB_ALLOW_OTHERS:false}

# Logging
logging.level.com.friendlyI=INFO
logging.level.org.springframework.web=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Security (use environment variables)
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:friendlyi2025!}