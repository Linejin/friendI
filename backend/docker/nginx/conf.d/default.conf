upstream backend {
    server backend:8080 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name localhost;

    # Redirect HTTP to HTTPS (uncomment for production with SSL)
    # return 301 https://$server_name$request_uri;

    # API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Authentication endpoints (with stricter rate limiting)
    location ~ ^/api/(auth|login|register) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Health check endpoint
    location /actuator/health {
        proxy_pass http://backend;
        access_log off;
    }

    # Swagger UI (only for development)
    location /swagger-ui/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files (if served by backend)
    location /uploads/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # Default proxy for other requests
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS server (uncomment and configure for production)
#server {
#    listen 443 ssl http2;
#    server_name localhost;
#
#    ssl_certificate /path/to/cert.pem;
#    ssl_certificate_key /path/to/private.key;
#    ssl_session_timeout 1d;
#    ssl_session_cache shared:SSL:50m;
#    ssl_session_tickets off;
#
#    # Modern configuration
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#    ssl_prefer_server_ciphers off;
#
#    # HSTS (optional)
#    add_header Strict-Transport-Security "max-age=63072000" always;
#
#    # Same location blocks as HTTP server above...
#}